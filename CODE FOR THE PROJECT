//CODE FOR THE PROJECT OF PASSWORD BASED SECURITY SYSTEM 
#include <Keypad.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// Define the LCD (I2C Address: 0x27 or 0x3F)
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Define the Keypad
const byte ROWS = 4; // 4 rows
const byte COLS = 4; // 4 columns
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {PA0, PA1, PA2, PA3}; // Connect to the row pinouts
byte colPins[COLS] = {PA4, PA5, PA6, PA7}; // Connect to the column pinouts

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// Password settings
String correctPassword = "1234";
String enteredPassword = "";

void setup() {
  // Initialize LCD
  lcd.begin();
  lcd.backlight();
  
  // Welcome message
  lcd.setCursor(0, 0);
  lcd.print("Enter Password:");
}

void loop() {
  char key = keypad.getKey(); // Read keypress
  
  if (key) {
    if (key == '#') {
      // Check password when '#' is pressed
      lcd.clear();
      if (enteredPassword == correctPassword) {
        lcd.setCursor(0, 0);
        lcd.print("ACCESS GRANTED");
      } else {
        lcd.setCursor(0, 0);
        lcd.print("ACCESS DENIED");
      }
      delay(3000); // Wait for 3 seconds
      enteredPassword = ""; // Reset the password
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Password:");
    } else if (key == '*') {
      // Clear password when '*' is pressed
      enteredPassword = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Password:");
    } else {
      // Add key to entered password
      enteredPassword += key;
      lcd.setCursor(0, 1);
      lcd.print(enteredPassword);
    }
  }
}
